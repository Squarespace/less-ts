{"strings":[null," ",".m1",".m2","res","#ns",">","&"," Mixin selector matching.","+","~"," less.js doesn't match the next mixin due to a bug that only trims a selector by 1"," rather than by the no. of elements that matched (ruleset.js in \"if (match = selector.match( ...\""," My code fixes this bug."," mixin calls below",".ruleset-1",".ruleset-2"],"root":[37,1,[[7,8,0,1],[33,[35,[[34,[[38,1,5]]]]],[[33,[35,[[34,[[38,1,2],[38,0,3]]]]],[[32,[29,4],[10,1,0],0]]],[33,[35,[[34,[[38,1,2]]]]],[[33,[35,[[34,[[38,1,7],[38,0,3]]]]],[[32,[29,4],[10,2,0],0]]]]],[33,[35,[[34,[[38,1,2],[38,1,3]]]]],[[32,[29,4],[10,3,0],0]]],[33,[35,[[34,[[38,1,2],[38,6,3]]]]],[[32,[29,4],[10,4,0],0]]],[33,[35,[[34,[[38,1,2],[38,9,3]]]]],[[32,[29,4],[10,5,0],0]]],[33,[35,[[34,[[38,6,2],[38,10,3]]]]],[[32,[29,4],[10,6,0],0]]]]],[33,[35,[[34,[[38,1,5],[38,1,2],[38,1,3]]]]],[[32,[29,4],[10,7,0],0]]],[33,[35,[[34,[[38,1,5],[38,0,2],[38,0,3]]]]],[[32,[29,4],[10,8,0],0]]],[33,[35,[[34,[[38,1,5],[38,0,2],[38,6,3]]]]],[[32,[29,4],[10,9,0],0]]],[7,11,0,1],[7,12,0,1],[7,13,0,1],[33,[35,[[34,[[38,1,5],[38,1,2]]]]],[[33,[35,[[34,[[38,1,7],[38,0,3]]]]],[[32,[29,4],[10,10,0],0]]]]],[7,14,0,1],[33,[35,[[34,[[38,1,15]]]]],[[24,[34,[[38,0,5],[38,0,2],[38,1,3]]],[-1],0]]],[33,[35,[[34,[[38,1,16]]]]],[[24,[34,[[38,0,5],[38,6,2],[38,0,3]]],[-1],0]]]]]}
